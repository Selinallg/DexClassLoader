//apply plugin: 'com.android.application'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 26



    defaultConfig {
//        applicationId "com.shellever.plugin"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
}

// Android Library
//task makeJar(type: Copy) {
//    //删除存在的
//    delete 'build/libs/pluginDevInfo.jar'
//    //设置拷贝的文件 release或者debug都可以，看你有没有release版的文件夹
//    from('build/intermediates/classes/debug/')
//    //打进jar包后的文件目录
//    into('build/libs/')
//    //将classes.jar放入build/libs/目录下
//    //include ,exclude参数来设置过滤
//    //（我们只关心classes.jar这个文件）
//    include('classes.jar')
//    //重命名
//    rename ('classes.jar', 'pluginDevInfo.jar')
//}
//
//makeJar.dependsOn(build)


// Phone
task clearJar(type: Delete) {
    // 编译完成后jar包存放位置
    delete 'build/libs/pluginDevInfo.jar'
    delete 'libs/pluginDevInfo.jar'
}
//打包任务
task makeJar(type: Jar) {
    //指定生成的jar名
    baseName 'pluginDevInfo'
    //从哪里打包class文件
    from('build/intermediates/classes/release/com/shellever/plugin')
    //打包到jar后的目录结构
    into('com/shellever/plugin/')
    //去掉不需要打包的目录和文件
    exclude('BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude { it.name.startsWith('R$') }
}
makeJar.dependsOn(clearJar, build)
